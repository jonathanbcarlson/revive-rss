<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Exploiting commutativity for practical fast replication</title><id>https://blog.acolyer.org/2019/03/15/exploiting-commutativity-for-practical-fast-replication/</id><updated>2025-09-10T15:16:06.220818260+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/03/15/exploiting-commutativity-for-practical-fast-replication/" rel="alternate"/><content>Exploiting commutativity for practical fast replication</content></entry><entry><title>Datacenter RPCs can be general and fast</title><id>https://blog.acolyer.org/2019/03/18/datacenter-rpcs-can-be-general-and-fast/</id><updated>2025-09-11T15:14:56.929548169+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/03/18/datacenter-rpcs-can-be-general-and-fast/" rel="alternate"/><content>Datacenter RPCs can be general and fast</content></entry><entry><title>Understanding lifecycle management complexity of datacenter topologies</title><id>https://blog.acolyer.org/2019/03/20/understanding-lifecycle-management-complexity-of-datacenter-topologies/</id><updated>2025-09-12T15:15:28.263892767+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/03/20/understanding-lifecycle-management-complexity-of-datacenter-topologies/" rel="alternate"/><content>Understanding lifecycle management complexity of datacenter topologies</content></entry><entry><title>Slim: OS kernel support for a low-overhead container overlay network</title><id>https://blog.acolyer.org/2019/03/22/slim-os-kernel-support-for-a-low-overhead-container-overlay-network/</id><updated>2025-09-13T15:12:36.829618340+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/03/22/slim-os-kernel-support-for-a-low-overhead-container-overlay-network/" rel="alternate"/><content>Slim: OS kernel support for a low-overhead container overlay network</content></entry><entry><title>Amazon Aurora: design considerations for high throughput cloud-native relational databases</title><id>https://blog.acolyer.org/2019/03/25/amazon-aurora-design-considerations-for-high-throughput-cloud-native-relational-databases/</id><updated>2025-09-14T15:13:06.505210002+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/03/25/amazon-aurora-design-considerations-for-high-throughput-cloud-native-relational-databases/" rel="alternate"/><content>Amazon Aurora: design considerations for high throughput cloud-native relational databases</content></entry><entry><title>Amazon Aurora: on avoiding distributed consensus for I/Os, commits, and membership changes</title><id>https://blog.acolyer.org/2019/03/27/amazon-aurora-on-avoiding-distributed-consensus-for-i-os-commits-and-membership-changes/</id><updated>2025-09-15T15:16:58.212783819+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/03/27/amazon-aurora-on-avoiding-distributed-consensus-for-i-os-commits-and-membership-changes/" rel="alternate"/><content>Amazon Aurora: on avoiding distributed consensus for I/Os, commits, and membership changes</content></entry><entry><title>Calvin: fast distributed transactions for partitioned database systems</title><id>https://blog.acolyer.org/2019/03/29/calvin-fast-distributed-transactions-for-partitioned-database-systems/</id><updated>2025-09-16T15:16:59.802771857+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/03/29/calvin-fast-distributed-transactions-for-partitioned-database-systems/" rel="alternate"/><content>Calvin: fast distributed transactions for partitioned database systems</content></entry><entry><title>The crux of voice (in)security: a brain study of speaker legitimacy detection</title><id>https://blog.acolyer.org/2019/04/01/the-crux-of-voice-insecurity-a-brain-study-of-speaker-legitimacy-detection/</id><updated>2025-09-17T15:16:38.184142732+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/04/01/the-crux-of-voice-insecurity-a-brain-study-of-speaker-legitimacy-detection/" rel="alternate"/><content>The crux of voice (in)security: a brain study of speaker legitimacy detection</content></entry><entry><title>Establishing software root of trust unconditionally</title><id>https://blog.acolyer.org/2019/04/03/establishing-software-root-of-trust-unconditionally/</id><updated>2025-09-18T15:16:17.013788241+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/04/03/establishing-software-root-of-trust-unconditionally/" rel="alternate"/><content>Establishing software root of trust unconditionally</content></entry><entry><title>Ginseng: keeping secrets in registers when you distrust the operating system</title><id>https://blog.acolyer.org/2019/04/05/ginseng-keeping-secrets-in-registers-when-you-distrust-the-operating-system/</id><updated>2025-09-19T15:15:41.903221269+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/04/05/ginseng-keeping-secrets-in-registers-when-you-distrust-the-operating-system/" rel="alternate"/><content>Ginseng: keeping secrets in registers when you distrust the operating system</content></entry></feed>