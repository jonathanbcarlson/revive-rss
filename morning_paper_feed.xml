<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Generic attacks on secure outsourced databases</title><id>https://blog.acolyer.org/2016/11/16/generic-attacks-on-secure-outsourced-databases/</id><updated>2024-06-05T15:12:41.444583663+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/11/16/generic-attacks-on-secure-outsourced-databases/" rel="alternate"/><content>Generic attacks on secure outsourced databases</content></entry><entry><title>Twice the bits, twice the trouble: vulnerabilities induced by migrating to 64-bit platforms</title><id>https://blog.acolyer.org/2016/11/17/twice-the-bits-twice-the-trouble-vulnerabilities-induced-by-migrating-to-64-bit-platforms/</id><updated>2024-06-06T15:13:58.180617406+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/11/17/twice-the-bits-twice-the-trouble-vulnerabilities-induced-by-migrating-to-64-bit-platforms/" rel="alternate"/><content>Twice the bits, twice the trouble: vulnerabilities induced by migrating to 64-bit platforms</content></entry><entry><title>The Honey Badger of BFT protocols</title><id>https://blog.acolyer.org/2016/11/18/the-honey-badger-of-bft-protocols/</id><updated>2024-06-07T15:12:52.618101186+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/11/18/the-honey-badger-of-bft-protocols/" rel="alternate"/><content>The Honey Badger of BFT protocols</content></entry><entry><title>Artificial Intelligence and life in 2030</title><id>https://blog.acolyer.org/2016/11/21/artificial-intelligence-and-life-in-2030/</id><updated>2024-06-08T15:12:34.647488611+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/11/21/artificial-intelligence-and-life-in-2030/" rel="alternate"/><content>Artificial Intelligence and life in 2030</content></entry><entry><title>Achieving human parity in conversational speech recognition</title><id>https://blog.acolyer.org/2016/11/22/achieving-human-parity-in-conversational-speech-recognition/</id><updated>2024-06-09T15:12:04.373335282+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/11/22/achieving-human-parity-in-conversational-speech-recognition/" rel="alternate"/><content>Achieving human parity in conversational speech recognition</content></entry><entry><title>Playing FPS games with deep reinforcement learning</title><id>https://blog.acolyer.org/2016/11/23/playing-fps-games-with-deep-reinforcement-learning/</id><updated>2024-06-10T15:14:19.724763511+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/11/23/playing-fps-games-with-deep-reinforcement-learning/" rel="alternate"/><content>Playing FPS games with deep reinforcement learning</content></entry><entry><title>Smart Reply: Automated response suggestion for email</title><id>https://blog.acolyer.org/2016/11/24/smart-reply-automated-response-suggestion-for-email/</id><updated>2024-06-11T15:13:06.117119196+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/11/24/smart-reply-automated-response-suggestion-for-email/" rel="alternate"/><content>Smart Reply: Automated response suggestion for email</content></entry><entry><title>Building machines that learn and think like people</title><id>https://blog.acolyer.org/2016/11/25/building-machines-that-learn-and-think-like-people/</id><updated>2024-06-12T15:12:03.934543802+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/11/25/building-machines-that-learn-and-think-like-people/" rel="alternate"/><content>Building machines that learn and think like people</content></entry><entry><title>Kraken: Leveraging live traffic tests to identify and resolve resource utilization bottlenecks in large scale web services</title><id>https://blog.acolyer.org/2016/11/28/kraken-leveraging-live-traffic-tests-to-identify-and-resolve-resource-utilization-bottlenecks-in-large-scale-web-services/</id><updated>2024-06-13T15:13:17.604622348+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/11/28/kraken-leveraging-live-traffic-tests-to-identify-and-resolve-resource-utilization-bottlenecks-in-large-scale-web-services/" rel="alternate"/><content>Kraken: Leveraging live traffic tests to identify and resolve resource utilization bottlenecks in large scale web services</content></entry><entry><title>Early detection of configuration errors to reduce failure damage</title><id>https://blog.acolyer.org/2016/11/29/early-detection-of-configuration-errors-to-reduce-failure-damage/</id><updated>2024-06-14T15:14:21.169646822+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/11/29/early-detection-of-configuration-errors-to-reduce-failure-damage/" rel="alternate"/><content>Early detection of configuration errors to reduce failure damage</content></entry></feed>