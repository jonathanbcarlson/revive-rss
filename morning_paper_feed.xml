<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Desert Island Papers: Jonas Bonér</title><id>https://blog.acolyer.org/2015/03/15/desert-island-papers-jonas-boner/</id><updated>2023-06-15T15:12:06.408289056+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/03/15/desert-island-papers-jonas-boner/" rel="alternate"/><content>Desert Island Papers: Jonas Bonér</content></entry><entry><title>Consistency analysis in Bloom: a CALM and collected approach</title><id>https://blog.acolyer.org/2015/03/16/consistency-analysis-in-bloom-a-calm-and-collected-approach/</id><updated>2023-06-16T15:11:42.403244369+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/03/16/consistency-analysis-in-bloom-a-calm-and-collected-approach/" rel="alternate"/><content>Consistency analysis in Bloom: a CALM and collected approach</content></entry><entry><title>Consistency, Availability, and Convergence + COPS</title><id>https://blog.acolyer.org/2015/03/17/consistency-availability-and-convergence-cops/</id><updated>2023-06-17T15:10:29.330986024+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/03/17/consistency-availability-and-convergence-cops/" rel="alternate"/><content>Consistency, Availability, and Convergence + COPS</content></entry><entry><title>A Comprehensive study of Convergent and Commutative Replicated Data Types</title><id>https://blog.acolyer.org/2015/03/18/a-comprehensive-study-of-convergent-and-commutative-replicated-data-types/</id><updated>2023-06-18T15:10:47.946900670+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/03/18/a-comprehensive-study-of-convergent-and-commutative-replicated-data-types/" rel="alternate"/><content>A Comprehensive study of Convergent and Commutative Replicated Data Types</content></entry><entry><title>Coordination Avoidance in Database Systems</title><id>https://blog.acolyer.org/2015/03/19/coordination-avoidance-in-database-systems/</id><updated>2023-06-19T15:12:23.088350807+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/03/19/coordination-avoidance-in-database-systems/" rel="alternate"/><content>Coordination Avoidance in Database Systems</content></entry><entry><title>Out of the Tar Pit</title><id>https://blog.acolyer.org/2015/03/20/out-of-the-tar-pit/</id><updated>2023-06-20T15:12:04.999234704+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/03/20/out-of-the-tar-pit/" rel="alternate"/><content>Out of the Tar Pit</content></entry><entry><title>Building on quicksand</title><id>https://blog.acolyer.org/2015/03/23/building-on-quicksand/</id><updated>2023-06-21T15:11:27.981537042+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/03/23/building-on-quicksand/" rel="alternate"/><content>Building on quicksand</content></entry><entry><title>Combining static model checking with dynamic enforcement using the Statecall Policy Language</title><id>https://blog.acolyer.org/2015/03/23/combining-static-model-checking-with-dynamic-enforcement-using-the-statecall-policy-language/</id><updated>2023-06-22T15:11:31.180298200+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/03/23/combining-static-model-checking-with-dynamic-enforcement-using-the-statecall-policy-language/" rel="alternate"/><content>Combining static model checking with dynamic enforcement using the Statecall Policy Language</content></entry><entry><title>SAMC: Semantic-aware model checking for fast discovery of deep bugs in cloud systems</title><id>https://blog.acolyer.org/2015/03/25/samc-semantic-aware-model-checking-for-fast-discovery-of-deep-bugs-in-cloud-systems/</id><updated>2023-06-23T15:13:23.506815558+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/03/25/samc-semantic-aware-model-checking-for-fast-discovery-of-deep-bugs-in-cloud-systems/" rel="alternate"/><content>SAMC: Semantic-aware model checking for fast discovery of deep bugs in cloud systems</content></entry><entry><title>Lineage-driven Fault Injection</title><id>https://blog.acolyer.org/2015/03/26/lineage-driven-fault-injection/</id><updated>2023-06-24T15:12:26.167699486+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/03/26/lineage-driven-fault-injection/" rel="alternate"/><content>Lineage-driven Fault Injection</content></entry></feed>