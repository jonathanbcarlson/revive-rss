<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Understanding, generalisation, and transfer learning in deep neural networks</title><id>https://blog.acolyer.org/2017/02/27/understanding-generalisation-and-transfer-learning-in-deep-neural-networks/</id><updated>2024-08-13T15:13:28.060701340+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/02/27/understanding-generalisation-and-transfer-learning-in-deep-neural-networks/" rel="alternate"/><content>Understanding, generalisation, and transfer learning in deep neural networks</content></entry><entry><title>When DNNs go wrong – adversarial examples and what we can learn from them</title><id>https://blog.acolyer.org/2017/02/28/when-dnns-go-wrong-adversarial-examples-and-what-we-can-learn-from-them/</id><updated>2024-08-14T15:13:28.905097778+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/02/28/when-dnns-go-wrong-adversarial-examples-and-what-we-can-learn-from-them/" rel="alternate"/><content>When DNNs go wrong – adversarial examples and what we can learn from them</content></entry><entry><title>Optimisation and training techniques for deep learning</title><id>https://blog.acolyer.org/2017/03/01/optimisation-and-training-techniques-for-deep-learning/</id><updated>2024-08-15T15:13:14.016489102+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/01/optimisation-and-training-techniques-for-deep-learning/" rel="alternate"/><content>Optimisation and training techniques for deep learning</content></entry><entry><title>Unsupervised learning and GANs</title><id>https://blog.acolyer.org/2017/03/02/unsupervised-learning-and-gans/</id><updated>2024-08-16T15:12:48.896741189+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/02/unsupervised-learning-and-gans/" rel="alternate"/><content>Unsupervised learning and GANs</content></entry><entry><title>RNN models for image generation</title><id>https://blog.acolyer.org/2017/03/03/rnn-models-for-image-generation/</id><updated>2024-08-17T15:12:03.850400104+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/03/rnn-models-for-image-generation/" rel="alternate"/><content>RNN models for image generation</content></entry><entry><title>HopFS: Scaling hierarchical file system metadata using NewSQL databases</title><id>https://blog.acolyer.org/2017/03/06/hopfs-scaling-hierarchical-file-system-metadata-using-newsql-databases/</id><updated>2024-08-18T15:12:14.166907740+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/06/hopfs-scaling-hierarchical-file-system-metadata-using-newsql-databases/" rel="alternate"/><content>HopFS: Scaling hierarchical file system metadata using NewSQL databases</content></entry><entry><title>Thou shalt not depend on me: analysing the use of outdated JavaScript libraries on the web</title><id>https://blog.acolyer.org/2017/03/07/thou-shalt-not-depend-on-me-analysing-the-use-of-outdated-javascript-libraries-on-the-web/</id><updated>2024-08-19T15:13:46.924765011+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/07/thou-shalt-not-depend-on-me-analysing-the-use-of-outdated-javascript-libraries-on-the-web/" rel="alternate"/><content>Thou shalt not depend on me: analysing the use of outdated JavaScript libraries on the web</content></entry><entry><title>Redundancy does not imply fault tolerance: analysis of distributed storage reactions to single errors and corruptions</title><id>https://blog.acolyer.org/2017/03/08/redundancy-does-not-imply-fault-tolerance-analysis-of-distributed-storage-reactions-to-single-errors-and-corruptions/</id><updated>2024-08-20T15:13:36.818747954+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/08/redundancy-does-not-imply-fault-tolerance-analysis-of-distributed-storage-reactions-to-single-errors-and-corruptions/" rel="alternate"/><content>Redundancy does not imply fault tolerance: analysis of distributed storage reactions to single errors and corruptions</content></entry><entry><title>MaMaDroid: Detecting Android malware by building Markov chains of behavorial models</title><id>https://blog.acolyer.org/2017/03/09/mamadroid-detecting-android-malware-by-building-markov-chains-of-behavorial-models/</id><updated>2024-08-21T15:13:18.796013165+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/09/mamadroid-detecting-android-malware-by-building-markov-chains-of-behavorial-models/" rel="alternate"/><content>MaMaDroid: Detecting Android malware by building Markov chains of behavorial models</content></entry><entry><title>Chronix: Long term storage and retrieval technology for anomaly detection in operational data</title><id>https://blog.acolyer.org/2017/03/10/chronix-long-term-storage-and-retrieval-technology-for-anomaly-detection-in-operational-data/</id><updated>2024-08-22T15:16:06.901991756+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/10/chronix-long-term-storage-and-retrieval-technology-for-anomaly-detection-in-operational-data/" rel="alternate"/><content>Chronix: Long term storage and retrieval technology for anomaly detection in operational data</content></entry></feed>