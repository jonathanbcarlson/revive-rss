<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Hyperledger fabric: a distributed operating system for permissioned blockchains</title><id>https://blog.acolyer.org/2018/06/04/hyperledger-fabric-a-distributed-operating-system-for-permissioned-blockchains/</id><updated>2025-05-17T15:14:37.518368436+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/06/04/hyperledger-fabric-a-distributed-operating-system-for-permissioned-blockchains/" rel="alternate"/><content>Hyperledger fabric: a distributed operating system for permissioned blockchains</content></entry><entry><title>ServiceFabric: a distributed platform for building microservices in the cloud</title><id>https://blog.acolyer.org/2018/06/05/servicefabric-a-distributed-platform-for-building-microservices-in-the-cloud/</id><updated>2025-05-18T15:14:23.263298400+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/06/05/servicefabric-a-distributed-platform-for-building-microservices-in-the-cloud/" rel="alternate"/><content>ServiceFabric: a distributed platform for building microservices in the cloud</content></entry><entry><title>Reducing DRAM footprint with NVM in Facebook</title><id>https://blog.acolyer.org/2018/06/06/reducing-dram-footprint-with-nvm-in-facebook/</id><updated>2025-05-19T15:17:59.195514393+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/06/06/reducing-dram-footprint-with-nvm-in-facebook/" rel="alternate"/><content>Reducing DRAM footprint with NVM in Facebook</content></entry><entry><title>Dynamic control flow in large-scale machine learning</title><id>https://blog.acolyer.org/2018/06/07/dynamic-control-flow-in-large-scale-machine-learning/</id><updated>2025-05-20T15:17:53.606295363+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/06/07/dynamic-control-flow-in-large-scale-machine-learning/" rel="alternate"/><content>Dynamic control flow in large-scale machine learning</content></entry><entry><title>BDS: A centralized near-optimal overlay network for inter-datacenter data replication</title><id>https://blog.acolyer.org/2018/06/08/bds-a-centralized-near-optimal-overlay-network-for-inter-datacenter-data-replication/</id><updated>2025-05-21T15:18:02.169527345+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/06/08/bds-a-centralized-near-optimal-overlay-network-for-inter-datacenter-data-replication/" rel="alternate"/><content>BDS: A centralized near-optimal overlay network for inter-datacenter data replication</content></entry><entry><title>Improving the expressiveness of deep learning frameworks with recursion</title><id>https://blog.acolyer.org/2018/06/11/improving-the-expressiveness-of-deep-learning-frameworks-with-recursion/</id><updated>2025-05-22T15:17:23.704252508+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/06/11/improving-the-expressiveness-of-deep-learning-frameworks-with-recursion/" rel="alternate"/><content>Improving the expressiveness of deep learning frameworks with recursion</content></entry><entry><title>Optimus: an efficient dynamic resource scheduler for deep learning clusters</title><id>https://blog.acolyer.org/2018/06/12/optimus-an-efficient-dynamic-resource-scheduler-for-deep-learning-clusters/</id><updated>2025-05-23T15:16:36.667892813+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/06/12/optimus-an-efficient-dynamic-resource-scheduler-for-deep-learning-clusters/" rel="alternate"/><content>Optimus: an efficient dynamic resource scheduler for deep learning clusters</content></entry><entry><title>Medea: scheduling of long running applications in shared production clusters</title><id>https://blog.acolyer.org/2018/06/13/medea-scheduling-of-long-running-applications-in-shared-production-clusters/</id><updated>2025-05-24T15:14:25.738179611+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/06/13/medea-scheduling-of-long-running-applications-in-shared-production-clusters/" rel="alternate"/><content>Medea: scheduling of long running applications in shared production clusters</content></entry><entry><title>Analytics with smart arrays: adaptive and efficient language-independent data</title><id>https://blog.acolyer.org/2018/06/14/analytics-with-smart-arrays-adaptive-and-efficient-language-independent-data/</id><updated>2025-05-25T15:14:40.748920248+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/06/14/analytics-with-smart-arrays-adaptive-and-efficient-language-independent-data/" rel="alternate"/><content>Analytics with smart arrays: adaptive and efficient language-independent data</content></entry><entry><title>Popular is cheaper: curtailing memory costs in interactive analytics engines</title><id>https://blog.acolyer.org/2018/06/15/popular-is-cheaper-curtailing-memory-costs-in-interactive-analytics-engines/</id><updated>2025-05-26T15:16:42.562180827+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/06/15/popular-is-cheaper-curtailing-memory-costs-in-interactive-analytics-engines/" rel="alternate"/><content>Popular is cheaper: curtailing memory costs in interactive analytics engines</content></entry></feed>