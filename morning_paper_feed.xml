<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Distributed representations of sentences and documents</title><id>https://blog.acolyer.org/2016/06/01/distributed-representations-of-sentences-and-documents/</id><updated>2024-03-07T15:11:37.289466823+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/06/01/distributed-representations-of-sentences-and-documents/" rel="alternate"/><content>Distributed representations of sentences and documents</content></entry><entry><title>Sequence to sequence learning with neural networks</title><id>https://blog.acolyer.org/2016/06/02/sequence-to-sequence-learning-with-neural-networks/</id><updated>2024-03-08T15:11:53.540167823+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/06/02/sequence-to-sequence-learning-with-neural-networks/" rel="alternate"/><content>Sequence to sequence learning with neural networks</content></entry><entry><title>Semi-supervised sequence learning</title><id>https://blog.acolyer.org/2016/06/03/semi-supervised-sequence-learning/</id><updated>2024-03-09T15:09:42.905746830+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/06/03/semi-supervised-sequence-learning/" rel="alternate"/><content>Semi-supervised sequence learning</content></entry><entry><title>From Aristotle to Ringelmann</title><id>https://blog.acolyer.org/2016/06/06/from-aristotle-to-ringelmann/</id><updated>2024-03-10T15:09:43.901117093+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/06/06/from-aristotle-to-ringelmann/" rel="alternate"/><content>From Aristotle to Ringelmann</content></entry><entry><title>BigDebug: Debugging primitives for interactive big data processing in Spark</title><id>https://blog.acolyer.org/2016/06/07/bigdebug-debugging-primitives-for-interactive-big-data-processing-in-spark/</id><updated>2024-03-11T15:12:18.989628063+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/06/07/bigdebug-debugging-primitives-for-interactive-big-data-processing-in-spark/" rel="alternate"/><content>BigDebug: Debugging primitives for interactive big data processing in Spark</content></entry><entry><title>On the “naturalness” of buggy code</title><id>https://blog.acolyer.org/2016/06/08/on-the-naturalness-of-buggy-code/</id><updated>2024-03-12T15:11:10.980622900+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/06/08/on-the-naturalness-of-buggy-code/" rel="alternate"/><content>On the “naturalness” of buggy code</content></entry><entry><title>Design Rule Spaces: A new form of architectural insight</title><id>https://blog.acolyer.org/2016/06/09/design-rule-spaces-a-new-form-of-architectural-insight/</id><updated>2024-03-13T15:12:24.698011486+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/06/09/design-rule-spaces-a-new-form-of-architectural-insight/" rel="alternate"/><content>Design Rule Spaces: A new form of architectural insight</content></entry><entry><title>Hotspot Patterns: The formal definition and automatic detection of architecture smells</title><id>https://blog.acolyer.org/2016/06/10/hotspot-patterns-the-formal-definition-and-automatic-detection-of-architecture-smells/</id><updated>2024-03-14T15:31:02.065095648+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/06/10/hotspot-patterns-the-formal-definition-and-automatic-detection-of-architecture-smells/" rel="alternate"/><content>Hotspot Patterns: The formal definition and automatic detection of architecture smells</content></entry><entry><title>Identifying and quantifying architectural debt</title><id>https://blog.acolyer.org/2016/06/13/identifying-and-quantifying-architectural-debt/</id><updated>2024-03-15T15:11:16.619903160+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/06/13/identifying-and-quantifying-architectural-debt/" rel="alternate"/><content>Identifying and quantifying architectural debt</content></entry><entry><title>Arrakis: the operating system is the control plane</title><id>https://blog.acolyer.org/2016/06/14/arrakis-the-operating-system-is-the-control-plane/</id><updated>2024-03-16T15:10:12.416050363+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/06/14/arrakis-the-operating-system-is-the-control-plane/" rel="alternate"/><content>Arrakis: the operating system is the control plane</content></entry></feed>