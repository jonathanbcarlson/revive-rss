<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>The SNOW theorem and latency-optimal read-only transactions</title><id>https://blog.acolyer.org/2016/12/06/the-snow-theorem-and-latency-optimal-read-only-transactions/</id><updated>2024-06-19T15:13:44.246022139+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/12/06/the-snow-theorem-and-latency-optimal-read-only-transactions/" rel="alternate"/><content>The SNOW theorem and latency-optimal read-only transactions</content></entry><entry><title>Interlude: On assumptions</title><id>https://blog.acolyer.org/2016/12/07/interlude-on-assumptions/</id><updated>2024-06-20T15:14:05.655778539+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/12/07/interlude-on-assumptions/" rel="alternate"/><content>Interlude: On assumptions</content></entry><entry><title>Just say NO to Paxos overhead: replacing consensus with network ordering</title><id>https://blog.acolyer.org/2016/12/08/just-say-no-to-paxos-overhead-replacing-consensus-with-network-ordering/</id><updated>2024-06-21T15:17:30.160027292+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/12/08/just-say-no-to-paxos-overhead-replacing-consensus-with-network-ordering/" rel="alternate"/><content>Just say NO to Paxos overhead: replacing consensus with network ordering</content></entry><entry><title>DQBarge: Improving data-quality tradeoffs in large-scale internet services</title><id>https://blog.acolyer.org/2016/12/09/dqbarge-improving-data-quality-tradeoffs-in-large-scale-internet-services/</id><updated>2024-06-22T15:12:41.243047051+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/12/09/dqbarge-improving-data-quality-tradeoffs-in-large-scale-internet-services/" rel="alternate"/><content>DQBarge: Improving data-quality tradeoffs in large-scale internet services</content></entry><entry><title>XFT: Practical fault-tolerance beyond crashes</title><id>https://blog.acolyer.org/2016/12/12/xft-practical-fault-tolerance-beyond-crashes/</id><updated>2024-06-23T15:11:40.858399900+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/12/12/xft-practical-fault-tolerance-beyond-crashes/" rel="alternate"/><content>XFT: Practical fault-tolerance beyond crashes</content></entry><entry><title>Diamond: Automating data management and storage for wide-area, reactive applications</title><id>https://blog.acolyer.org/2016/12/13/diamond-automating-data-management-and-storage-for-wide-area-reactive-applications/</id><updated>2024-06-24T15:13:42.339729289+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/12/13/diamond-automating-data-management-and-storage-for-wide-area-reactive-applications/" rel="alternate"/><content>Diamond: Automating data management and storage for wide-area, reactive applications</content></entry><entry><title>SCONE: Secure Linux containers with Intel SGX</title><id>https://blog.acolyer.org/2016/12/14/scone-secure-linux-containers-with-intel-sgx/</id><updated>2024-06-25T15:13:02.458071585+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/12/14/scone-secure-linux-containers-with-intel-sgx/" rel="alternate"/><content>SCONE: Secure Linux containers with Intel SGX</content></entry><entry><title>FaSST: Fast, scalable and simple distributed transactions with two-sided (RDMA) datagram RPCs</title><id>https://blog.acolyer.org/2016/12/15/fasst-fast-scalable-and-simple-distributed-transactions-with-two-sided-rdma-datagram-rpcs/</id><updated>2024-06-26T15:13:48.786567899+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/12/15/fasst-fast-scalable-and-simple-distributed-transactions-with-two-sided-rdma-datagram-rpcs/" rel="alternate"/><content>FaSST: Fast, scalable and simple distributed transactions with two-sided (RDMA) datagram RPCs</content></entry><entry><title>TensorFlow: A system for large-scale machine learning</title><id>https://blog.acolyer.org/2016/12/16/tensorflow-a-system-for-large-scale-machine-learning/</id><updated>2024-06-27T15:13:52.551057647+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/12/16/tensorflow-a-system-for-large-scale-machine-learning/" rel="alternate"/><content>TensorFlow: A system for large-scale machine learning</content></entry><entry><title>So that was 2016</title><id>https://blog.acolyer.org/2016/12/19/so-that-was-2016/</id><updated>2024-06-28T15:12:56.218992838+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/12/19/so-that-was-2016/" rel="alternate"/><content>So that was 2016</content></entry></feed>