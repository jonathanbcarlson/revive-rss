<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Sharding the shards: managing datastore locality at scale with Akkio</title><id>https://blog.acolyer.org/2018/11/05/sharding-the-shards-managing-datastore-locality-at-scale-with-akkio/</id><updated>2025-07-22T15:19:30.069476201+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/11/05/sharding-the-shards-managing-datastore-locality-at-scale-with-akkio/" rel="alternate"/><content>Sharding the shards: managing datastore locality at scale with Akkio</content></entry><entry><title>ASAP: fast, approximate graph pattern mining at scale</title><id>https://blog.acolyer.org/2018/11/07/asap-fast-approximate-graph-pattern-mining-at-scale/</id><updated>2025-07-23T15:19:43.701170414+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/11/07/asap-fast-approximate-graph-pattern-mining-at-scale/" rel="alternate"/><content>ASAP: fast, approximate graph pattern mining at scale</content></entry><entry><title>ApproxJoin: approximate distributed joins</title><id>https://blog.acolyer.org/2018/11/09/approxjoin-approximate-distributed-joins/</id><updated>2025-07-24T15:17:38.503972090+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/11/09/approxjoin-approximate-distributed-joins/" rel="alternate"/><content>ApproxJoin: approximate distributed joins</content></entry><entry><title>Debugging distributed systems with why-across-time provenance</title><id>https://blog.acolyer.org/2018/11/12/debugging-distributed-systems-with-why-across-time-provenance/</id><updated>2025-07-25T15:18:56.801652394+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/11/12/debugging-distributed-systems-with-why-across-time-provenance/" rel="alternate"/><content>Debugging distributed systems with why-across-time provenance</content></entry><entry><title>Unikernels as processes</title><id>https://blog.acolyer.org/2018/11/14/unikernels-as-processes/</id><updated>2025-07-26T15:16:39.858328875+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/11/14/unikernels-as-processes/" rel="alternate"/><content>Unikernels as processes</content></entry><entry><title>Overload control for scaling WeChat microservices</title><id>https://blog.acolyer.org/2018/11/16/overload-control-for-scaling-wechat-microservices/</id><updated>2025-07-27T15:16:46.371016859+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/11/16/overload-control-for-scaling-wechat-microservices/" rel="alternate"/><content>Overload control for scaling WeChat microservices</content></entry><entry><title>ScootR: scaling R dataframes on dataflow systems</title><id>https://blog.acolyer.org/2018/11/19/scootr-scaling-r-dataframes-on-dataflow-systems/</id><updated>2025-07-28T15:19:40.414059840+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/11/19/scootr-scaling-r-dataframes-on-dataflow-systems/" rel="alternate"/><content>ScootR: scaling R dataframes on dataflow systems</content></entry><entry><title>Continuum: a platform for cost-aware low-latency continual learning</title><id>https://blog.acolyer.org/2018/11/21/continuum-a-platform-for-cost-aware-low-latency-continual-learning/</id><updated>2025-07-29T15:20:28.044343608+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/11/21/continuum-a-platform-for-cost-aware-low-latency-continual-learning/" rel="alternate"/><content>Continuum: a platform for cost-aware low-latency continual learning</content></entry><entry><title>Uncertainty propagation in data processing systems</title><id>https://blog.acolyer.org/2018/11/23/uncertainty-propagation-in-data-processing-systems/</id><updated>2025-07-30T15:19:24.981136788+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/11/23/uncertainty-propagation-in-data-processing-systems/" rel="alternate"/><content>Uncertainty propagation in data processing systems</content></entry><entry><title>BEAT: asynchronous BFT made practical</title><id>https://blog.acolyer.org/2018/11/26/beat-asynchronous-bft-made-practical/</id><updated>2025-07-31T15:19:19.532380695+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/11/26/beat-asynchronous-bft-made-practical/" rel="alternate"/><content>BEAT: asynchronous BFT made practical</content></entry></feed>