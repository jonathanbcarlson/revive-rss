<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Implementing Linearizability at Large Scale and Low Latency</title><id>https://blog.acolyer.org/2015/10/22/implementing-linearizability-at-large-scale-and-low-latency/</id><updated>2023-10-20T15:10:31.795981577+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/22/implementing-linearizability-at-large-scale-and-low-latency/" rel="alternate"/><content>Implementing Linearizability at Large Scale and Low Latency</content></entry><entry><title>Vuvuzela: Scalable Private Messaging Resistant to Traffic Analysis</title><id>https://blog.acolyer.org/2015/10/23/vuvuzela-scalable-private-messaging-resistant-to-traffic-analysis/</id><updated>2023-10-21T15:10:23.461242801+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/23/vuvuzela-scalable-private-messaging-resistant-to-traffic-analysis/" rel="alternate"/><content>Vuvuzela: Scalable Private Messaging Resistant to Traffic Analysis</content></entry><entry><title>Fast In-memory Transaction Processing using RDMA and HTM</title><id>https://blog.acolyer.org/2015/10/26/fast-in-memory-transaction-processing-using-rdma-and-rtm/</id><updated>2023-10-22T15:10:38.134372514+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/26/fast-in-memory-transaction-processing-using-rdma-and-rtm/" rel="alternate"/><content>Fast In-memory Transaction Processing using RDMA and HTM</content></entry><entry><title>Read-Log-Update: A Lightweight Synchronization Mechanism for Concurrent Programming</title><id>https://blog.acolyer.org/2015/10/27/read-log-update-a-lightweight-synchronization-mechanism-for-concurrent-programming/</id><updated>2023-10-23T15:12:27.594759223+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/27/read-log-update-a-lightweight-synchronization-mechanism-for-concurrent-programming/" rel="alternate"/><content>Read-Log-Update: A Lightweight Synchronization Mechanism for Concurrent Programming</content></entry><entry><title>Split-Level IO Scheduling</title><id>https://blog.acolyer.org/2015/10/28/split-level-io-scheduling/</id><updated>2023-10-24T15:13:02.877878563+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/28/split-level-io-scheduling/" rel="alternate"/><content>Split-Level IO Scheduling</content></entry><entry><title>How to memorize a random 60-bit string</title><id>https://blog.acolyer.org/2015/10/29/how-to-memorize-a-random-60-bit-string/</id><updated>2023-10-25T15:11:45.087160556+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/29/how-to-memorize-a-random-60-bit-string/" rel="alternate"/><content>How to memorize a random 60-bit string</content></entry><entry><title>Symmetry Reduction Enables Model Checking of More Complex Emerging Behaviours of Swarm Navigation Algorithms</title><id>https://blog.acolyer.org/2015/10/30/symmetry-reduction-enables-model-checking-of-more-complex-emerging-behaviours-of-swarm-navigation-algorithms/</id><updated>2023-10-26T15:12:09.086521178+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/30/symmetry-reduction-enables-model-checking-of-more-complex-emerging-behaviours-of-swarm-navigation-algorithms/" rel="alternate"/><content>Symmetry Reduction Enables Model Checking of More Complex Emerging Behaviours of Swarm Navigation Algorithms</content></entry><entry><title>ROS: An open-source Robot Operating System</title><id>https://blog.acolyer.org/2015/11/02/ros-an-open-source-robot-operating-system/</id><updated>2023-10-27T15:11:40.500569999+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/11/02/ros-an-open-source-robot-operating-system/" rel="alternate"/><content>ROS: An open-source Robot Operating System</content></entry><entry><title>Human-Robot Teaming for Rescue Missions: Team ViGIR’s Approach to the 2013 DARPA Robotics Challenge Trials</title><id>https://blog.acolyer.org/2015/11/03/human-robot-teaming-for-rescue-missions-team-vigirs-approach-to-the-2013-darpa-robotics-challenge-trials/</id><updated>2023-10-28T15:11:24.155434572+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/11/03/human-robot-teaming-for-rescue-missions-team-vigirs-approach-to-the-2013-darpa-robotics-challenge-trials/" rel="alternate"/><content>Human-Robot Teaming for Rescue Missions: Team ViGIR’s Approach to the 2013 DARPA Robotics Challenge Trials</content></entry><entry><title>A Robust Layered Control System for a Mobile Robot</title><id>https://blog.acolyer.org/2015/11/04/a-robust-layered-control-system-for-a-mobile-robot/</id><updated>2023-10-29T15:10:25.764337268+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/11/04/a-robust-layered-control-system-for-a-mobile-robot/" rel="alternate"/><content>A Robust Layered Control System for a Mobile Robot</content></entry></feed>