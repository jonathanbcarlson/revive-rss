<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>A static verification framework for message passing in Go using behavioural types</title><id>https://blog.acolyer.org/2018/01/25/a-static-verification-framework-for-message-passing-in-go-using-behavioural-types/</id><updated>2025-02-24T15:16:47.505131467+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/01/25/a-static-verification-framework-for-message-passing-in-go-using-behavioural-types/" rel="alternate"/><content>A static verification framework for message passing in Go using behavioural types</content></entry><entry><title>A practitioner’s guide to reading programming languages papers</title><id>https://blog.acolyer.org/2018/01/26/a-practitioners-guide-to-reading-programming-languages-papers/</id><updated>2025-02-25T15:16:10.723691681+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/01/26/a-practitioners-guide-to-reading-programming-languages-papers/" rel="alternate"/><content>A practitioner’s guide to reading programming languages papers</content></entry><entry><title>The paradigms of programming</title><id>https://blog.acolyer.org/2018/01/29/the-paradigms-of-programming/</id><updated>2025-02-26T15:16:17.959969286+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/01/29/the-paradigms-of-programming/" rel="alternate"/><content>The paradigms of programming</content></entry><entry><title>A theory of the learnable</title><id>https://blog.acolyer.org/2018/01/31/a-theory-of-the-learnable/</id><updated>2025-02-27T15:16:33.133900981+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/01/31/a-theory-of-the-learnable/" rel="alternate"/><content>A theory of the learnable</content></entry><entry><title>Learning representations by back-propagating errors</title><id>https://blog.acolyer.org/2018/02/01/learning-representations-by-back-propagating-errors/</id><updated>2025-02-28T15:15:19.681857894+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/02/01/learning-representations-by-back-propagating-errors/" rel="alternate"/><content>Learning representations by back-propagating errors</content></entry><entry><title>Polynomial-time algorithms for prime factorization and discrete logarithms on a quantum computer</title><id>https://blog.acolyer.org/2018/02/02/polynomial-time-algorithms-for-prime-factorization-and-discrete-logarithms-on-a-quantum-computer/</id><updated>2025-03-01T15:13:40.912161382+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/02/02/polynomial-time-algorithms-for-prime-factorization-and-discrete-logarithms-on-a-quantum-computer/" rel="alternate"/><content>Polynomial-time algorithms for prime factorization and discrete logarithms on a quantum computer</content></entry><entry><title>Quantum computing in the NISQ era and beyond</title><id>https://blog.acolyer.org/2018/02/05/quantum-computing-in-the-nisq-era-and-beyond/</id><updated>2025-03-02T15:14:23.206810696+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/02/05/quantum-computing-in-the-nisq-era-and-beyond/" rel="alternate"/><content>Quantum computing in the NISQ era and beyond</content></entry><entry><title>Quantum algorithms: an overview</title><id>https://blog.acolyer.org/2018/02/06/quantum-algorithms-an-overview/</id><updated>2025-03-03T15:16:13.292533161+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/02/06/quantum-algorithms-an-overview/" rel="alternate"/><content>Quantum algorithms: an overview</content></entry><entry><title>Blockstack: a global naming and storage system secured by blockchain</title><id>https://blog.acolyer.org/2018/02/07/blockstack-a-global-naming-and-storage-system-secured-by-blockchain/</id><updated>2025-03-04T15:16:11.890111172+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/02/07/blockstack-a-global-naming-and-storage-system-secured-by-blockchain/" rel="alternate"/><content>Blockstack: a global naming and storage system secured by blockchain</content></entry><entry><title>Chainspace: a sharded smart contracts platform</title><id>https://blog.acolyer.org/2018/02/08/chainspace-a-sharded-smart-contracts-platform/</id><updated>2025-03-05T15:16:36.918292155+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/02/08/chainspace-a-sharded-smart-contracts-platform/" rel="alternate"/><content>Chainspace: a sharded smart contracts platform</content></entry></feed>