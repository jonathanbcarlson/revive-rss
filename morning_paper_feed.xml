<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Distributed Information Processing in Biological and Computational Systems</title><id>https://blog.acolyer.org/2015/09/29/distributed-information-processing-in-biological-and-computational-systems/</id><updated>2023-10-03T15:12:37.743849829+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/09/29/distributed-information-processing-in-biological-and-computational-systems/" rel="alternate"/><content>Distributed Information Processing in Biological and Computational Systems</content></entry><entry><title>A Pact with the Devil</title><id>https://blog.acolyer.org/2015/09/30/a-pact-with-the-devil/</id><updated>2023-10-04T15:13:02.609148126+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/09/30/a-pact-with-the-devil/" rel="alternate"/><content>A Pact with the Devil</content></entry><entry><title>Misbehavior in Bitcoin: A Study of Double-Spending and Accountability</title><id>https://blog.acolyer.org/2015/10/01/misbehavior-in-bitcoin-a-study-of-double-spending-and-accountability/</id><updated>2023-10-05T15:12:44.229148840+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/01/misbehavior-in-bitcoin-a-study-of-double-spending-and-accountability/" rel="alternate"/><content>Misbehavior in Bitcoin: A Study of Double-Spending and Accountability</content></entry><entry><title>Cloud Computing Resource Scheduling and a Survey of its Evolutionary Approaches</title><id>https://blog.acolyer.org/2015/10/02/cloud-computing-resource-scheduling-and-a-survey-of-its-evolutionary-approaches/</id><updated>2023-10-06T15:12:55.304627114+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/02/cloud-computing-resource-scheduling-and-a-survey-of-its-evolutionary-approaches/" rel="alternate"/><content>Cloud Computing Resource Scheduling and a Survey of its Evolutionary Approaches</content></entry><entry><title>IPFS – Content Addressed, Versioned, P2P File System</title><id>https://blog.acolyer.org/2015/10/05/ipfs-content-addressed-versioned-p2p-file-system/</id><updated>2023-10-07T15:10:30.404027402+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/05/ipfs-content-addressed-versioned-p2p-file-system/" rel="alternate"/><content>IPFS – Content Addressed, Versioned, P2P File System</content></entry><entry><title>Dapper, A Large Scale Distributed Systems Tracing Infrastructure</title><id>https://blog.acolyer.org/2015/10/06/dapper-a-large-scale-distributed-systems-tracing-infrastructure/</id><updated>2023-10-08T15:10:31.916675162+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/06/dapper-a-large-scale-distributed-systems-tracing-infrastructure/" rel="alternate"/><content>Dapper, A Large Scale Distributed Systems Tracing Infrastructure</content></entry><entry><title>The Mystery Machine: End-to-end performance analysis of large-scale internet services</title><id>https://blog.acolyer.org/2015/10/07/the-mystery-machine-end-to-end-performance-analysis-of-large-scale-internet-services/</id><updated>2023-10-09T15:13:07.877727675+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/07/the-mystery-machine-end-to-end-performance-analysis-of-large-scale-internet-services/" rel="alternate"/><content>The Mystery Machine: End-to-end performance analysis of large-scale internet services</content></entry><entry><title>lprof: A Non-intrusive Request-Flow Profiler for Distributed Systems</title><id>https://blog.acolyer.org/2015/10/08/lprof-a-non-intrusive-request-flow-profiler-for-distributed-systems/</id><updated>2023-10-10T15:12:34.702945375+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/08/lprof-a-non-intrusive-request-flow-profiler-for-distributed-systems/" rel="alternate"/><content>lprof: A Non-intrusive Request-Flow Profiler for Distributed Systems</content></entry><entry><title>App-Bisect: Autonomous healing for microservices-based apps</title><id>https://blog.acolyer.org/2015/10/09/app-bisect-autonomous-healing-for-microservices-based-apps/</id><updated>2023-10-11T15:11:27.295121657+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/09/app-bisect-autonomous-healing-for-microservices-based-apps/" rel="alternate"/><content>App-Bisect: Autonomous healing for microservices-based apps</content></entry><entry><title>Failure Sketching: A Technique for Automated Root Cause Diagnosis of In-Production Failures</title><id>https://blog.acolyer.org/2015/10/12/failure-sketching-a-technique-for-automated-root-cause-diagnosis-of-in-production-failures/</id><updated>2023-10-12T15:12:04.790423338+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/10/12/failure-sketching-a-technique-for-automated-root-cause-diagnosis-of-in-production-failures/" rel="alternate"/><content>Failure Sketching: A Technique for Automated Root Cause Diagnosis of In-Production Failures</content></entry></feed>