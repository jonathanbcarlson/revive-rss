<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Investigating ad transparency mechanisms in social media: a case study of Facebook’s explanations</title><id>https://blog.acolyer.org/2018/03/07/investigating-ad-transparency-mechanisms-in-social-media-a-case-study-of-facebooks-explanations/</id><updated>2025-03-24T15:16:43.431235263+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/07/investigating-ad-transparency-mechanisms-in-social-media-a-case-study-of-facebooks-explanations/" rel="alternate"/><content>Investigating ad transparency mechanisms in social media: a case study of Facebook’s explanations</content></entry><entry><title>Zeus: Analyzing safety of smart contracts</title><id>https://blog.acolyer.org/2018/03/08/zeus-analyzing-safety-of-smart-contracts/</id><updated>2025-03-25T15:16:40.539532800+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/08/zeus-analyzing-safety-of-smart-contracts/" rel="alternate"/><content>Zeus: Analyzing safety of smart contracts</content></entry><entry><title>Settling payments fast and private: efficient decentralized routing for path-based transactions</title><id>https://blog.acolyer.org/2018/03/09/settling-payments-fast-and-private-efficient-decentralized-routing-for-path-based-transactions/</id><updated>2025-03-26T15:16:57.544323202+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/09/settling-payments-fast-and-private-efficient-decentralized-routing-for-path-based-transactions/" rel="alternate"/><content>Settling payments fast and private: efficient decentralized routing for path-based transactions</content></entry><entry><title>Synode: understanding and automatically preventing injection attacks on Node.js</title><id>https://blog.acolyer.org/2018/03/12/synode-understanding-and-automatically-preventing-injection-attacks-on-node-js/</id><updated>2025-03-27T15:16:39.845008580+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/12/synode-understanding-and-automatically-preventing-injection-attacks-on-node-js/" rel="alternate"/><content>Synode: understanding and automatically preventing injection attacks on Node.js</content></entry><entry><title>JavaScript Zero: real JavaScript, and zero side-channel attacks</title><id>https://blog.acolyer.org/2018/03/13/javascript-zero-real-javascript-and-zero-side-channel-attacks/</id><updated>2025-03-28T15:16:09.762257283+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/13/javascript-zero-real-javascript-and-zero-side-channel-attacks/" rel="alternate"/><content>JavaScript Zero: real JavaScript, and zero side-channel attacks</content></entry><entry><title>Game of missuggestions: semantic analysis of search autocomplete manipulation</title><id>https://blog.acolyer.org/2018/03/14/game-of-missuggestions-semantic-analysis-of-search-autocomplete-manipulation/</id><updated>2025-03-29T15:15:07.350533996+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/14/game-of-missuggestions-semantic-analysis-of-search-autocomplete-manipulation/" rel="alternate"/><content>Game of missuggestions: semantic analysis of search autocomplete manipulation</content></entry><entry><title>Exposing congestion attack on emerging connected vehicle based traffic signal control</title><id>https://blog.acolyer.org/2018/03/15/exposing-congestion-attack-on-emerging-connected-vehicle-based-traffic-signal-control/</id><updated>2025-03-30T15:14:29.729730475+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/15/exposing-congestion-attack-on-emerging-connected-vehicle-based-traffic-signal-control/" rel="alternate"/><content>Exposing congestion attack on emerging connected vehicle based traffic signal control</content></entry><entry><title>When coding style survives compilation: de-anonymizing programmers from executable binaries</title><id>https://blog.acolyer.org/2018/03/16/when-coding-style-survives-compilation-de-anonymizing-programmers-from-executable-binaries/</id><updated>2025-03-31T15:16:22.398863825+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/16/when-coding-style-survives-compilation-de-anonymizing-programmers-from-executable-binaries/" rel="alternate"/><content>When coding style survives compilation: de-anonymizing programmers from executable binaries</content></entry><entry><title>A quantitive analysis of the impact of arbitrary blockchain content on Bitcoin</title><id>https://blog.acolyer.org/2018/03/19/a-quantitive-analysis-of-the-impact-of-arbitrary-blockchain-content-on-bitcoin/</id><updated>2025-04-01T15:16:56.063755012+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/19/a-quantitive-analysis-of-the-impact-of-arbitrary-blockchain-content-on-bitcoin/" rel="alternate"/><content>A quantitive analysis of the impact of arbitrary blockchain content on Bitcoin</content></entry><entry><title>Designing secure Ethereum smart contracts: a finite state machine approach</title><id>https://blog.acolyer.org/2018/03/20/designing-secure-ethereum-smart-contracts-a-finite-state-machine-approach/</id><updated>2025-04-02T15:16:27.173578302+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/20/designing-secure-ethereum-smart-contracts-a-finite-state-machine-approach/" rel="alternate"/><content>Designing secure Ethereum smart contracts: a finite state machine approach</content></entry></feed>