<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>HopFS: Scaling hierarchical file system metadata using NewSQL databases</title><id>https://blog.acolyer.org/2017/03/06/hopfs-scaling-hierarchical-file-system-metadata-using-newsql-databases/</id><updated>2024-08-18T15:12:14.166907740+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/06/hopfs-scaling-hierarchical-file-system-metadata-using-newsql-databases/" rel="alternate"/><content>HopFS: Scaling hierarchical file system metadata using NewSQL databases</content></entry><entry><title>Thou shalt not depend on me: analysing the use of outdated JavaScript libraries on the web</title><id>https://blog.acolyer.org/2017/03/07/thou-shalt-not-depend-on-me-analysing-the-use-of-outdated-javascript-libraries-on-the-web/</id><updated>2024-08-19T15:13:46.924765011+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/07/thou-shalt-not-depend-on-me-analysing-the-use-of-outdated-javascript-libraries-on-the-web/" rel="alternate"/><content>Thou shalt not depend on me: analysing the use of outdated JavaScript libraries on the web</content></entry><entry><title>Redundancy does not imply fault tolerance: analysis of distributed storage reactions to single errors and corruptions</title><id>https://blog.acolyer.org/2017/03/08/redundancy-does-not-imply-fault-tolerance-analysis-of-distributed-storage-reactions-to-single-errors-and-corruptions/</id><updated>2024-08-20T15:13:36.818747954+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/08/redundancy-does-not-imply-fault-tolerance-analysis-of-distributed-storage-reactions-to-single-errors-and-corruptions/" rel="alternate"/><content>Redundancy does not imply fault tolerance: analysis of distributed storage reactions to single errors and corruptions</content></entry><entry><title>MaMaDroid: Detecting Android malware by building Markov chains of behavorial models</title><id>https://blog.acolyer.org/2017/03/09/mamadroid-detecting-android-malware-by-building-markov-chains-of-behavorial-models/</id><updated>2024-08-21T15:13:18.796013165+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/09/mamadroid-detecting-android-malware-by-building-markov-chains-of-behavorial-models/" rel="alternate"/><content>MaMaDroid: Detecting Android malware by building Markov chains of behavorial models</content></entry><entry><title>Chronix: Long term storage and retrieval technology for anomaly detection in operational data</title><id>https://blog.acolyer.org/2017/03/10/chronix-long-term-storage-and-retrieval-technology-for-anomaly-detection-in-operational-data/</id><updated>2024-08-22T15:16:06.901991756+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/10/chronix-long-term-storage-and-retrieval-technology-for-anomaly-detection-in-operational-data/" rel="alternate"/><content>Chronix: Long term storage and retrieval technology for anomaly detection in operational data</content></entry><entry><title>Enlightening the I/O path: A holistic approach for application performance</title><id>https://blog.acolyer.org/2017/03/13/enlightening-the-io-path-a-holistic-approach-for-application-performance/</id><updated>2024-08-23T15:15:43.531400634+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/13/enlightening-the-io-path-a-holistic-approach-for-application-performance/" rel="alternate"/><content>Enlightening the I/O path: A holistic approach for application performance</content></entry><entry><title>Panoply: Low-TCB Linux applications with SGX enclaves</title><id>https://blog.acolyer.org/2017/03/14/panoply-low-tcb-linux-applications-with-sgx-enclaves/</id><updated>2024-08-24T15:12:59.460723299+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/14/panoply-low-tcb-linux-applications-with-sgx-enclaves/" rel="alternate"/><content>Panoply: Low-TCB Linux applications with SGX enclaves</content></entry><entry><title>Application crash consistency and performance with CCFS</title><id>https://blog.acolyer.org/2017/03/15/application-crash-consistency-and-performance-with-ccfs/</id><updated>2024-08-25T15:12:35.630625388+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/15/application-crash-consistency-and-performance-with-ccfs/" rel="alternate"/><content>Application crash consistency and performance with CCFS</content></entry><entry><title>Deconstructing Xen</title><id>https://blog.acolyer.org/2017/03/16/deconstructing-xen/</id><updated>2024-08-26T15:13:33.392987370+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/16/deconstructing-xen/" rel="alternate"/><content>Deconstructing Xen</content></entry><entry><title>Omid reloaded: scalable and highly-available transaction processing</title><id>https://blog.acolyer.org/2017/03/17/omid-reloaded-scalable-and-highly-available-transaction-processing/</id><updated>2024-08-27T15:14:14.429697760+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/03/17/omid-reloaded-scalable-and-highly-available-transaction-processing/" rel="alternate"/><content>Omid reloaded: scalable and highly-available transaction processing</content></entry></feed>