<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Scalability! But at what COST?</title><id>https://blog.acolyer.org/2015/06/05/scalability-but-at-what-cost/</id><updated>2023-08-05T15:10:15.749437380+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/06/05/scalability-but-at-what-cost/" rel="alternate"/><content>Scalability! But at what COST?</content></entry><entry><title>A Bridging Model for Parallel Computation</title><id>https://blog.acolyer.org/2015/06/08/a-bridging-model-for-parallel-computation/</id><updated>2023-08-06T15:10:59.845934477+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/06/08/a-bridging-model-for-parallel-computation/" rel="alternate"/><content>A Bridging Model for Parallel Computation</content></entry><entry><title>Detecting Termination of Distributed Computations Using Markers</title><id>https://blog.acolyer.org/2015/06/09/detecting-termination-of-distributed-computations-using-markers/</id><updated>2023-08-07T15:11:49.090198359+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/06/09/detecting-termination-of-distributed-computations-using-markers/" rel="alternate"/><content>Detecting Termination of Distributed Computations Using Markers</content></entry><entry><title>A higher order estimate of the optimum checkpoint interval for restart dumps</title><id>https://blog.acolyer.org/2015/06/10/a-higher-order-estimate-of-the-optimun-checkpoint-interval-for-restart-dumps/</id><updated>2023-08-08T15:11:52.471991094+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/06/10/a-higher-order-estimate-of-the-optimun-checkpoint-interval-for-restart-dumps/" rel="alternate"/><content>A higher order estimate of the optimum checkpoint interval for restart dumps</content></entry><entry><title>The Drinking Philosophers Problem</title><id>https://blog.acolyer.org/2015/06/11/the-drinking-philosophers-problem/</id><updated>2023-08-09T15:13:51.727441694+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/06/11/the-drinking-philosophers-problem/" rel="alternate"/><content>The Drinking Philosophers Problem</content></entry><entry><title>Naiad: A Timely Dataflow System</title><id>https://blog.acolyer.org/2015/06/12/naiad-a-timely-dataflow-system/</id><updated>2023-08-10T15:12:17.536948648+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/06/12/naiad-a-timely-dataflow-system/" rel="alternate"/><content>Naiad: A Timely Dataflow System</content></entry><entry><title>Twitter Heron: Stream Processing at Scale</title><id>https://blog.acolyer.org/2015/06/15/twitter-heron-stream-processing-at-scale/</id><updated>2023-08-11T15:11:21.241890492+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/06/15/twitter-heron-stream-processing-at-scale/" rel="alternate"/><content>Twitter Heron: Stream Processing at Scale</content></entry><entry><title>Heracles: Improving Resource Efficiency at Scale</title><id>https://blog.acolyer.org/2015/06/16/heracles-improving-resource-efficiency-at-scale/</id><updated>2023-08-12T15:10:08.431427185+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/06/16/heracles-improving-resource-efficiency-at-scale/" rel="alternate"/><content>Heracles: Improving Resource Efficiency at Scale</content></entry><entry><title>Differential Dataflow</title><id>https://blog.acolyer.org/2015/06/17/differential-dataflow/</id><updated>2023-08-13T15:10:17.211517497+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/06/17/differential-dataflow/" rel="alternate"/><content>Differential Dataflow</content></entry><entry><title>Spinning Fast Iterative Dataflows</title><id>https://blog.acolyer.org/2015/06/18/spinning-fast-iterative-dataflows/</id><updated>2023-08-14T15:10:54.451682404+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2015/06/18/spinning-fast-iterative-dataflows/" rel="alternate"/><content>Spinning Fast Iterative Dataflows</content></entry></feed>