<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Progressive neural networks</title><id>https://blog.acolyer.org/2016/10/11/progressive-neural-networks/</id><updated>2024-05-10T15:11:59.786781513+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/10/11/progressive-neural-networks/" rel="alternate"/><content>Progressive neural networks</content></entry><entry><title>Towards deep symbolic reinforcement learning</title><id>https://blog.acolyer.org/2016/10/12/towards-deep-symbolic-reinforcement-learning/</id><updated>2024-05-11T15:10:58.167703379+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/10/12/towards-deep-symbolic-reinforcement-learning/" rel="alternate"/><content>Towards deep symbolic reinforcement learning</content></entry><entry><title>Go to statement considered harmful</title><id>https://blog.acolyer.org/2016/10/13/go-to-statement-considered-harmful/</id><updated>2024-05-12T15:11:58.104442527+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/10/13/go-to-statement-considered-harmful/" rel="alternate"/><content>Go to statement considered harmful</content></entry><entry><title>Program development by stepwise refinement</title><id>https://blog.acolyer.org/2016/10/14/program-development-by-stepwise-refinement/</id><updated>2024-05-13T15:13:12.621208256+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/10/14/program-development-by-stepwise-refinement/" rel="alternate"/><content>Program development by stepwise refinement</content></entry><entry><title>Information distribution aspects of design methodology</title><id>https://blog.acolyer.org/2016/10/17/information-distribution-aspects-of-design-methodology/</id><updated>2024-05-14T15:14:07.664475897+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/10/17/information-distribution-aspects-of-design-methodology/" rel="alternate"/><content>Information distribution aspects of design methodology</content></entry><entry><title>Hierarchical program structures</title><id>https://blog.acolyer.org/2016/10/18/hierarchical-program-structures/</id><updated>2024-05-15T15:11:41.826721340+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/10/18/hierarchical-program-structures/" rel="alternate"/><content>Hierarchical program structures</content></entry><entry><title>Protection in programming languages</title><id>https://blog.acolyer.org/2016/10/19/protection-in-programming-languages/</id><updated>2024-05-16T15:12:11.380319745+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/10/19/protection-in-programming-languages/" rel="alternate"/><content>Protection in programming languages</content></entry><entry><title>Programming with Abstract Data Types</title><id>https://blog.acolyer.org/2016/10/20/programming-with-abstract-data-types/</id><updated>2024-05-17T15:12:32.350484124+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/10/20/programming-with-abstract-data-types/" rel="alternate"/><content>Programming with Abstract Data Types</content></entry><entry><title>A design methodology for reliable software systems</title><id>https://blog.acolyer.org/2016/10/21/a-design-methodology-for-reliable-software-systems/</id><updated>2024-05-18T15:12:59.528488448+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/10/21/a-design-methodology-for-reliable-software-systems/" rel="alternate"/><content>A design methodology for reliable software systems</content></entry><entry><title>What’s wrong with Git? A conceptual design analysis</title><id>https://blog.acolyer.org/2016/10/24/whats-wrong-with-git-a-conceptual-design-analysis/</id><updated>2024-05-19T15:11:17.639456014+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/10/24/whats-wrong-with-git-a-conceptual-design-analysis/" rel="alternate"/><content>What’s wrong with Git? A conceptual design analysis</content></entry></feed>