<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>The amazing power of word vectors</title><id>https://blog.acolyer.org/2016/04/21/the-amazing-power-of-word-vectors/</id><updated>2024-02-07T15:10:52.834844219+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/04/21/the-amazing-power-of-word-vectors/" rel="alternate"/><content>The amazing power of word vectors</content></entry><entry><title>GloVe: Global Vectors for Word Representation</title><id>https://blog.acolyer.org/2016/04/22/glove-global-vectors-for-word-representation/</id><updated>2024-02-08T15:11:47.365640184+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/04/22/glove-global-vectors-for-word-representation/" rel="alternate"/><content>GloVe: Global Vectors for Word Representation</content></entry><entry><title>Delta State Replicated Data Types</title><id>https://blog.acolyer.org/2016/04/25/delta-state-replicated-data-types/</id><updated>2024-02-09T15:10:47.965794817+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/04/25/delta-state-replicated-data-types/" rel="alternate"/><content>Delta State Replicated Data Types</content></entry><entry><title>The Linux Scheduler: a Decade of Wasted Cores</title><id>https://blog.acolyer.org/2016/04/26/the-linux-scheduler-a-decade-of-wasted-cores/</id><updated>2024-02-10T15:10:12.827467295+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/04/26/the-linux-scheduler-a-decade-of-wasted-cores/" rel="alternate"/><content>The Linux Scheduler: a Decade of Wasted Cores</content></entry><entry><title>GeePS: Scalable deep learning on distributed GPUs with a GPU-specialized parameter server</title><id>https://blog.acolyer.org/2016/04/27/geeps-scalable-deep-learning-on-distributed-gpus-with-a-gpu-specialized-parameter-server/</id><updated>2024-02-11T15:11:57.667719104+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/04/27/geeps-scalable-deep-learning-on-distributed-gpus-with-a-gpu-specialized-parameter-server/" rel="alternate"/><content>GeePS: Scalable deep learning on distributed GPUs with a GPU-specialized parameter server</content></entry><entry><title>Data Tiering in Heterogeneous Memory Systems</title><id>https://blog.acolyer.org/2016/04/28/data-tiering-in-heterogeneous-memory-systems/</id><updated>2024-02-12T15:12:19.256904178+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/04/28/data-tiering-in-heterogeneous-memory-systems/" rel="alternate"/><content>Data Tiering in Heterogeneous Memory Systems</content></entry><entry><title>Optimizing Distributed Actor Systems for Dynamic Interactive Services</title><id>https://blog.acolyer.org/2016/04/29/optimizing-distributed-actor-systems-for-dynamic-interactive-services/</id><updated>2024-02-13T15:10:17.710125661+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/04/29/optimizing-distributed-actor-systems-for-dynamic-interactive-services/" rel="alternate"/><content>Optimizing Distributed Actor Systems for Dynamic Interactive Services</content></entry><entry><title>Slacker: Fast Distribution with Lazy Docker Containers</title><id>https://blog.acolyer.org/2016/05/02/slacker-fast-distribution-with-lazy-docker-containers/</id><updated>2024-02-14T15:11:44.946931497+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/05/02/slacker-fast-distribution-with-lazy-docker-containers/" rel="alternate"/><content>Slacker: Fast Distribution with Lazy Docker Containers</content></entry><entry><title>Gorilla: A fast, scalable, in-memory time series database</title><id>https://blog.acolyer.org/2016/05/03/gorilla-a-fast-scalable-in-memory-time-series-database/</id><updated>2024-02-15T15:11:20.628748051+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/05/03/gorilla-a-fast-scalable-in-memory-time-series-database/" rel="alternate"/><content>Gorilla: A fast, scalable, in-memory time series database</content></entry><entry><title>BTrDB: Optimizing Storage System Design for Timeseries Processing</title><id>https://blog.acolyer.org/2016/05/04/btrdb-optimizing-storage-system-design-for-timeseries-processing/</id><updated>2024-02-16T15:11:54.288374202+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/05/04/btrdb-optimizing-storage-system-design-for-timeseries-processing/" rel="alternate"/><content>BTrDB: Optimizing Storage System Design for Timeseries Processing</content></entry></feed>