<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Neurosurgeon: collaborative intelligence between the cloud and the mobile edge</title><id>https://blog.acolyer.org/2017/05/25/neurosurgeon-collaborative-intelligence-between-the-cloud-and-the-mobile-edge/</id><updated>2024-10-06T15:14:07.785149986+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/05/25/neurosurgeon-collaborative-intelligence-between-the-cloud-and-the-mobile-edge/" rel="alternate"/><content>Neurosurgeon: collaborative intelligence between the cloud and the mobile edge</content></entry><entry><title>Apps with hardware: enabling run-time architectural customization in smart phones</title><id>https://blog.acolyer.org/2017/05/26/apps-with-hardware-enabling-run-time-architectural-customization-in-smart-phones/</id><updated>2024-10-07T15:15:22.212541693+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/05/26/apps-with-hardware-enabling-run-time-architectural-customization-in-smart-phones/" rel="alternate"/><content>Apps with hardware: enabling run-time architectural customization in smart phones</content></entry><entry><title>An empirical study on the correctness of formally verified distributed systems</title><id>https://blog.acolyer.org/2017/05/29/an-empirical-study-on-the-correctness-of-formally-verified-distributed-systems/</id><updated>2024-10-08T15:14:55.827989564+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/05/29/an-empirical-study-on-the-correctness-of-formally-verified-distributed-systems/" rel="alternate"/><content>An empirical study on the correctness of formally verified distributed systems</content></entry><entry><title>Mosaic: processing a trillion-edge graph on a single machine</title><id>https://blog.acolyer.org/2017/05/30/mosaic-processing-a-trillion-edge-graph-on-a-single-machine/</id><updated>2024-10-09T15:14:17.224066110+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/05/30/mosaic-processing-a-trillion-edge-graph-on-a-single-machine/" rel="alternate"/><content>Mosaic: processing a trillion-edge graph on a single machine</content></entry><entry><title>Online reconstruction of structural information from datacenter logs</title><id>https://blog.acolyer.org/2017/05/31/online-reconstruction-of-structural-information-from-datacenter-logs/</id><updated>2024-10-10T15:14:55.330774232+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/05/31/online-reconstruction-of-structural-information-from-datacenter-logs/" rel="alternate"/><content>Online reconstruction of structural information from datacenter logs</content></entry><entry><title>DStress: Efficient differentially private computations on distributed data</title><id>https://blog.acolyer.org/2017/06/01/dstress-efficient-differentially-private-computations-on-distributed-data/</id><updated>2024-10-11T15:14:24.380662741+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/06/01/dstress-efficient-differentially-private-computations-on-distributed-data/" rel="alternate"/><content>DStress: Efficient differentially private computations on distributed data</content></entry><entry><title>Statistical analysis of latency through semantic profiling</title><id>https://blog.acolyer.org/2017/06/02/statistical-analysis-of-latency-through-semantic-profiling/</id><updated>2024-10-12T15:13:37.816339965+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/06/02/statistical-analysis-of-latency-through-semantic-profiling/" rel="alternate"/><content>Statistical analysis of latency through semantic profiling</content></entry><entry><title>Hybrids on Steroids: SGX-based high-performance BFT</title><id>https://blog.acolyer.org/2017/06/05/hybrids-on-steroids-sgx-based-high-performance-bft/</id><updated>2024-10-13T15:13:46.599628270+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/06/05/hybrids-on-steroids-sgx-based-high-performance-bft/" rel="alternate"/><content>Hybrids on Steroids: SGX-based high-performance BFT</content></entry><entry><title>SGXBounds: memory safety for shielded execution</title><id>https://blog.acolyer.org/2017/06/06/sgxbounds-memory-safety-for-shielded-execution/</id><updated>2024-10-14T15:15:04.526374139+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/06/06/sgxbounds-memory-safety-for-shielded-execution/" rel="alternate"/><content>SGXBounds: memory safety for shielded execution</content></entry><entry><title>RFP: When RPC is faster than server-bypass with RDMA</title><id>https://blog.acolyer.org/2017/06/07/rfp-when-rpc-is-faster-than-server-bypass-with-rdma/</id><updated>2024-10-15T15:14:56.307189430+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2017/06/07/rfp-when-rpc-is-faster-than-server-bypass-with-rdma/" rel="alternate"/><content>RFP: When RPC is faster than server-bypass with RDMA</content></entry></feed>