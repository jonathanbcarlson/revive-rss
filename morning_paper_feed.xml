<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Distributed TensorFlow with MPI</title><id>https://blog.acolyer.org/2016/03/18/distributed-tensorflow-with-mpi/</id><updated>2024-01-23T15:12:09.164936474+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/03/18/distributed-tensorflow-with-mpi/" rel="alternate"/><content>Distributed TensorFlow with MPI</content></entry><entry><title>Maglev: A Fast and Reliable Software Network Load Balancer</title><id>https://blog.acolyer.org/2016/03/21/maglev-a-fast-and-reliable-software-network-load-balancer/</id><updated>2024-01-24T15:12:46.959842763+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/03/21/maglev-a-fast-and-reliable-software-network-load-balancer/" rel="alternate"/><content>Maglev: A Fast and Reliable Software Network Load Balancer</content></entry><entry><title>Universal Packet Scheduling</title><id>https://blog.acolyer.org/2016/03/22/universal-packet-scheduling/</id><updated>2024-01-25T15:12:35.603674026+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/03/22/universal-packet-scheduling/" rel="alternate"/><content>Universal Packet Scheduling</content></entry><entry><title>FairRide: Near-Optimal, Fair Cache Sharing</title><id>https://blog.acolyer.org/2016/03/23/fairride-near-optimal-fair-cache-sharing/</id><updated>2024-01-26T15:11:34.675863361+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/03/23/fairride-near-optimal-fair-cache-sharing/" rel="alternate"/><content>FairRide: Near-Optimal, Fair Cache Sharing</content></entry><entry><title>Cliffhanger: Scaling Performance Cliffs in Web Memory Caches</title><id>https://blog.acolyer.org/2016/03/24/cliffhanger-scaling-performance-cliffs-in-web-memory-caches/</id><updated>2024-01-27T15:09:37.730820268+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/03/24/cliffhanger-scaling-performance-cliffs-in-web-memory-caches/" rel="alternate"/><content>Cliffhanger: Scaling Performance Cliffs in Web Memory Caches</content></entry><entry><title>Sieve: Cryptographically Enforced Access Control for User Data in Untrusted Clouds</title><id>https://blog.acolyer.org/2016/03/25/sieve-cryptographically-enforced-access-control-for-user-data-in-untrusted-clouds/</id><updated>2024-01-28T15:09:28.348446317+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/03/25/sieve-cryptographically-enforced-access-control-for-user-data-in-untrusted-clouds/" rel="alternate"/><content>Sieve: Cryptographically Enforced Access Control for User Data in Untrusted Clouds</content></entry><entry><title>Speeding up Web Page Loads with Shandian</title><id>https://blog.acolyer.org/2016/03/28/speeding-up-web-page-loads-with-shandian/</id><updated>2024-01-29T15:11:04.868806453+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/03/28/speeding-up-web-page-loads-with-shandian/" rel="alternate"/><content>Speeding up Web Page Loads with Shandian</content></entry><entry><title>Polaris: Faster Page Loads Using Fine-Grained Dependency Tracking</title><id>https://blog.acolyer.org/2016/03/29/polaris-faster-page-loads-using-fine-grained-dependency-tracking/</id><updated>2024-01-30T15:11:09.225592788+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/03/29/polaris-faster-page-loads-using-fine-grained-dependency-tracking/" rel="alternate"/><content>Polaris: Faster Page Loads Using Fine-Grained Dependency Tracking</content></entry><entry><title>Diplomat: Using Delegations to Protect Community Repositories</title><id>https://blog.acolyer.org/2016/03/30/diplomat-using-delegations-to-protect-community-repositories/</id><updated>2024-01-31T15:11:00.595203722+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/03/30/diplomat-using-delegations-to-protect-community-repositories/" rel="alternate"/><content>Diplomat: Using Delegations to Protect Community Repositories</content></entry><entry><title>Ernest: Efficient Performance Prediction for Large-Scale Advanced Analytics</title><id>https://blog.acolyer.org/2016/03/31/ernest-efficient-performance-prediction-for-large-scale-advanced-analytics/</id><updated>2024-02-01T15:10:27.921293968+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2016/03/31/ernest-efficient-performance-prediction-for-large-scale-advanced-analytics/" rel="alternate"/><content>Ernest: Efficient Performance Prediction for Large-Scale Advanced Analytics</content></entry></feed>