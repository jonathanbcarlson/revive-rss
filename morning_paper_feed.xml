<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Fail-slow at scale: evidence of hardware performance faults in large production systems</title><id>https://blog.acolyer.org/2018/02/26/fail-slow-at-scale-evidence-of-hardware-performance-faults-in-large-production-systems/</id><updated>2025-03-17T15:16:13.991457695+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/02/26/fail-slow-at-scale-evidence-of-hardware-performance-faults-in-large-production-systems/" rel="alternate"/><content>Fail-slow at scale: evidence of hardware performance faults in large production systems</content></entry><entry><title>Protocol aware recovery for consensus-based storage</title><id>https://blog.acolyer.org/2018/02/27/protocol-aware-recovery-for-consensus-based-storage/</id><updated>2025-03-18T15:16:45.739474451+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/02/27/protocol-aware-recovery-for-consensus-based-storage/" rel="alternate"/><content>Protocol aware recovery for consensus-based storage</content></entry><entry><title>Barrier-enabled IO stack for Flash storage</title><id>https://blog.acolyer.org/2018/02/28/barrier-enabled-io-stack-for-flash-storage/</id><updated>2025-03-19T15:16:27.077414055+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/02/28/barrier-enabled-io-stack-for-flash-storage/" rel="alternate"/><content>Barrier-enabled IO stack for Flash storage</content></entry><entry><title>Clay codes: moulding MDS codes to yield an MSR code</title><id>https://blog.acolyer.org/2018/03/01/clay-codes-moulding-mds-codes-to-yield-an-msr-code/</id><updated>2025-03-20T15:16:47.356591273+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/01/clay-codes-moulding-mds-codes-to-yield-an-msr-code/" rel="alternate"/><content>Clay codes: moulding MDS codes to yield an MSR code</content></entry><entry><title>Towards web-based delta synchronization for cloud storage systems</title><id>https://blog.acolyer.org/2018/03/02/towards-web-based-delta-synchronization-for-cloud-storage-systems/</id><updated>2025-03-21T15:16:03.117481282+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/02/towards-web-based-delta-synchronization-for-cloud-storage-systems/" rel="alternate"/><content>Towards web-based delta synchronization for cloud storage systems</content></entry><entry><title>Apps, trackers, privacy, and regulators: a global study of the mobile tracking ecosystem</title><id>https://blog.acolyer.org/2018/03/05/apps-trackers-privacy-and-regulators-a-global-study-of-the-mobile-tracking-ecosystem/</id><updated>2025-03-22T15:13:29.278921386+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/05/apps-trackers-privacy-and-regulators-a-global-study-of-the-mobile-tracking-ecosystem/" rel="alternate"/><content>Apps, trackers, privacy, and regulators: a global study of the mobile tracking ecosystem</content></entry><entry><title>Bug fixes, improvements, … and privacy leaks</title><id>https://blog.acolyer.org/2018/03/06/bug-fixes-improvements-and-privacy-leaks/</id><updated>2025-03-23T15:15:13.020621064+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/06/bug-fixes-improvements-and-privacy-leaks/" rel="alternate"/><content>Bug fixes, improvements, … and privacy leaks</content></entry><entry><title>Investigating ad transparency mechanisms in social media: a case study of Facebook’s explanations</title><id>https://blog.acolyer.org/2018/03/07/investigating-ad-transparency-mechanisms-in-social-media-a-case-study-of-facebooks-explanations/</id><updated>2025-03-24T15:16:43.431235263+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/07/investigating-ad-transparency-mechanisms-in-social-media-a-case-study-of-facebooks-explanations/" rel="alternate"/><content>Investigating ad transparency mechanisms in social media: a case study of Facebook’s explanations</content></entry><entry><title>Zeus: Analyzing safety of smart contracts</title><id>https://blog.acolyer.org/2018/03/08/zeus-analyzing-safety-of-smart-contracts/</id><updated>2025-03-25T15:16:40.539532800+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/08/zeus-analyzing-safety-of-smart-contracts/" rel="alternate"/><content>Zeus: Analyzing safety of smart contracts</content></entry><entry><title>Settling payments fast and private: efficient decentralized routing for path-based transactions</title><id>https://blog.acolyer.org/2018/03/09/settling-payments-fast-and-private-efficient-decentralized-routing-for-path-based-transactions/</id><updated>2025-03-26T15:16:57.544323202+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2018/03/09/settling-payments-fast-and-private-efficient-decentralized-routing-for-path-based-transactions/" rel="alternate"/><content>Settling payments fast and private: efficient decentralized routing for path-based transactions</content></entry></feed>