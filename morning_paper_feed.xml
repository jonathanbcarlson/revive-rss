<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Distributed consensus revised – Part III</title><id>https://blog.acolyer.org/2019/05/10/distributed-consensus-revised-part-iii/</id><updated>2025-09-29T15:16:17.794940098+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/10/distributed-consensus-revised-part-iii/" rel="alternate"/><content>Distributed consensus revised – Part III</content></entry><entry><title>An open-source benchmark suite for microservices and their hardware-software implications for cloud &amp; edge systems</title><id>https://blog.acolyer.org/2019/05/13/an-open-source-benchmark-suite-for-microservices-and-their-hardware-software-implications-for-cloud-edge-systems/</id><updated>2025-09-30T15:13:59.273153833+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/13/an-open-source-benchmark-suite-for-microservices-and-their-hardware-software-implications-for-cloud-edge-systems/" rel="alternate"/><content>An open-source benchmark suite for microservices and their hardware-software implications for cloud &amp; edge systems</content></entry><entry><title>Seer: leveraging big data to navigate the complexity of performance debugging in cloud microservices</title><id>https://blog.acolyer.org/2019/05/15/seer/</id><updated>2025-10-01T15:16:09.526807646+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/15/seer/" rel="alternate"/><content>Seer: leveraging big data to navigate the complexity of performance debugging in cloud microservices</content></entry><entry><title>Understanding real-world concurrency bugs in Go</title><id>https://blog.acolyer.org/2019/05/17/understanding-real-world-concurrency-bugs-in-go/</id><updated>2025-10-02T15:16:10.699799500+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/17/understanding-real-world-concurrency-bugs-in-go/" rel="alternate"/><content>Understanding real-world concurrency bugs in Go</content></entry><entry><title>RPCValet: NI-driven tail-aware balancing of µs-scale RPCs</title><id>https://blog.acolyer.org/2019/05/20/rpcvalet/</id><updated>2025-10-03T15:15:29.670717520+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/20/rpcvalet/" rel="alternate"/><content>RPCValet: NI-driven tail-aware balancing of µs-scale RPCs</content></entry><entry><title>Software-defined far memory in warehouse scale computers</title><id>https://blog.acolyer.org/2019/05/22/sw-far-memory/</id><updated>2025-10-04T15:12:54.350932355+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/22/sw-far-memory/" rel="alternate"/><content>Software-defined far memory in warehouse scale computers</content></entry><entry><title>Compress objects, not cache lines: an object-based compressed memory hierarchy</title><id>https://blog.acolyer.org/2019/05/24/zippads/</id><updated>2025-10-05T15:13:07.898067967+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/24/zippads/" rel="alternate"/><content>Compress objects, not cache lines: an object-based compressed memory hierarchy</content></entry><entry><title>CheriABI: enforcing valid pointer provenance and minimizing pointer privilege in the POSIX C run-time environment</title><id>https://blog.acolyer.org/2019/05/28/cheri-abi/</id><updated>2025-10-06T15:16:07.120589439+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/28/cheri-abi/" rel="alternate"/><content>CheriABI: enforcing valid pointer provenance and minimizing pointer privilege in the POSIX C run-time environment</content></entry><entry><title>Boosted race trees for low energy classification</title><id>https://blog.acolyer.org/2019/05/29/race-trees/</id><updated>2025-10-07T15:17:26.184942303+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/29/race-trees/" rel="alternate"/><content>Boosted race trees for low energy classification</content></entry><entry><title>A case for lease-based, utilitarian resource management on mobile devices</title><id>https://blog.acolyer.org/2019/05/31/lease-os/</id><updated>2025-10-08T15:17:06.607579400+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/31/lease-os/" rel="alternate"/><content>A case for lease-based, utilitarian resource management on mobile devices</content></entry></feed>