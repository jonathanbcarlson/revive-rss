<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Morning Paper</title><id>https://blog.acolyer.org/</id><updated>2023-04-14T06:03:06.609159824+00:00</updated><author><name>Adrian Colyer</name></author><icon>https://secure.gravatar.com/blavatar/09326a066a08237015d6b84f026d36ae?s=32</icon><entry><title>Teaching rigorous distributed systems with efficient model checking</title><id>https://blog.acolyer.org/2019/04/17/teaching-rigorous-distributed-systems-with-efficient-model-checking/</id><updated>2025-09-24T15:16:17.493894694+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/04/17/teaching-rigorous-distributed-systems-with-efficient-model-checking/" rel="alternate"/><content>Teaching rigorous distributed systems with efficient model checking</content></entry><entry><title>Keeping master green at scale</title><id>https://blog.acolyer.org/2019/04/18/keeping-master-green-at-scale/</id><updated>2025-09-25T15:16:41.711408316+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/04/18/keeping-master-green-at-scale/" rel="alternate"/><content>Keeping master green at scale</content></entry><entry><title>End of term</title><id>https://blog.acolyer.org/2019/04/22/end-of-term-5/</id><updated>2025-09-26T15:16:31.747640253+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/04/22/end-of-term-5/" rel="alternate"/><content>End of term</content></entry><entry><title>Distributed consensus revised – Part I</title><id>https://blog.acolyer.org/2019/05/07/distributed-consensus-revised-part-i/</id><updated>2025-09-27T15:13:13.249209697+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/07/distributed-consensus-revised-part-i/" rel="alternate"/><content>Distributed consensus revised – Part I</content></entry><entry><title>Distributed consensus revised – Part II</title><id>https://blog.acolyer.org/2019/05/08/distributed-consensus-revised-part-ii/</id><updated>2025-09-28T15:13:00.005134680+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/08/distributed-consensus-revised-part-ii/" rel="alternate"/><content>Distributed consensus revised – Part II</content></entry><entry><title>Distributed consensus revised – Part III</title><id>https://blog.acolyer.org/2019/05/10/distributed-consensus-revised-part-iii/</id><updated>2025-09-29T15:16:17.794940098+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/10/distributed-consensus-revised-part-iii/" rel="alternate"/><content>Distributed consensus revised – Part III</content></entry><entry><title>An open-source benchmark suite for microservices and their hardware-software implications for cloud &amp; edge systems</title><id>https://blog.acolyer.org/2019/05/13/an-open-source-benchmark-suite-for-microservices-and-their-hardware-software-implications-for-cloud-edge-systems/</id><updated>2025-09-30T15:13:59.273153833+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/13/an-open-source-benchmark-suite-for-microservices-and-their-hardware-software-implications-for-cloud-edge-systems/" rel="alternate"/><content>An open-source benchmark suite for microservices and their hardware-software implications for cloud &amp; edge systems</content></entry><entry><title>Seer: leveraging big data to navigate the complexity of performance debugging in cloud microservices</title><id>https://blog.acolyer.org/2019/05/15/seer/</id><updated>2025-10-01T15:16:09.526807646+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/15/seer/" rel="alternate"/><content>Seer: leveraging big data to navigate the complexity of performance debugging in cloud microservices</content></entry><entry><title>Understanding real-world concurrency bugs in Go</title><id>https://blog.acolyer.org/2019/05/17/understanding-real-world-concurrency-bugs-in-go/</id><updated>2025-10-02T15:16:10.699799500+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/17/understanding-real-world-concurrency-bugs-in-go/" rel="alternate"/><content>Understanding real-world concurrency bugs in Go</content></entry><entry><title>RPCValet: NI-driven tail-aware balancing of µs-scale RPCs</title><id>https://blog.acolyer.org/2019/05/20/rpcvalet/</id><updated>2025-10-03T15:15:29.670717520+00:00</updated><author><name>Adrian Colyer</name></author><link href="https://blog.acolyer.org/2019/05/20/rpcvalet/" rel="alternate"/><content>RPCValet: NI-driven tail-aware balancing of µs-scale RPCs</content></entry></feed>